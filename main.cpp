//  Created by blaine-ww
//  Date: 11.23.2021
//  Purpose: Demo

/** @file main.cpp */

#include "CheckerRows.h"


/** @param x: List of x coordinates
  * @param y: List of y coordinates
  * @param row: Size of row in CheckerBoard
  * @param col: Size of col in CheckerBoard
  * @param newFile: Write test results into this output file
  * @return void
  */
void test(vector<double> x, vector<double> y, int row, int col, ostream& newFile)
{
    
    CheckerBoard CB(row,col);

    vector<vector<double>> ans = CB.arrangeRowOrder(x,y);

    // cout << ans << endl;
    // cout << "size: " << ans[0].size() << endl;

    newFile << ans << "\n";

    CB.display();  //display immediate results onto console, but can also be viewed via output.txt or writePlot.py

} //END test



int main() {


    // Output .txt file will be later utilized by writePlot.py to visualize results
    ofstream newFile("output.txt");

    // Example 0
    vector<double> x0 = {2, 0, 1, 1, 2, 0, 2, 0, 1};
    vector<double> y0 = {0, 0, 0, 1, 1, 2, 2, 1, 2};
    
    newFile << "output_0 = " << "\n";

    cout << "Example 0:\n";
    test(x0,y0,3,3, newFile);


    // Example 1
    vector<vector<double>> example_1 = 
    {
        {2.0000, 4.1573, 7.8050, 5.8272, 1.2043, 6.6265, 4.7515, 7.0000, 3.1503, 3.5600, 7.4076, 8.0000, 1.0000, 4.9529,
             1.6064, 6.4303, 3.7614, 3.9605, 6.2317, 2.0391, 4.3413, 6.0307, 2.6484, 2.2444, 5.6211, 5.1520, 3.3563, 5.3488,
             1.4064, 2.8470, 4.5476, 7.6076, 3.0435, 1.8042, 2.4475, 7.2051},
        {2.0000, 2.3596, 4.1698, 7.3580, 5.9785, 2.7711, 5.8521, 9.0000, 7.7168, 5.5371, 6.5541, 3.0000, 7.0000, 4.7412,
             3.9681, 3.8970, 4.4659, 3.4068, 5.0366, 7.3464, 8.1138, 6.1902, 4.2088, 6.2889, 8.5404, 3.6433, 6.6207, 2.5581,
             4.9679, 3.1858, 6.9762, 5.3544, 2.1739, 2.9788, 5.2431, 7.7692}
    };

    newFile << "output_1 = " <<"\n";

    cout << "Example 1:\n";
    test(example_1[0],example_1[1],6,6,newFile);    


    // Example 2
    vector<vector<double>> example_2 = 
    {
        {0.0, 0.30000000000000004, 0.6000000000000001, 0.9000000000000001, 1.2000000000000002, 1.5000000000000002,
             1.8000000000000003, 0.30000000000000004, 0.6000000000000001, 0.9000000000000001, 1.2000000000000002,
             1.5000000000000002, 1.8000000000000003, 2.1000000000000005, 0.6000000000000001, 0.9000000000000001,
             1.2000000000000002, 1.5000000000000002, 1.8000000000000003, 2.1000000000000005, 2.4000000000000004,
             0.9000000000000001, 1.2000000000000002, 1.5000000000000002, 1.8000000000000003, 2.1000000000000005,
             2.4000000000000004, 2.7, 1.2000000000000002, 1.5000000000000002, 1.8000000000000003, 2.1000000000000005,
             2.4000000000000004, 2.7, 3.0000000000000004},
        {0.0, 0.3, 0.6, 0.8999999999999999, 1.2, 1.5, 1.7999999999999998, -0.5, -0.2, 0.09999999999999998,
             0.3999999999999999, 0.7, 1.0, 1.2999999999999998, -1.0, -0.7, -0.4, -0.10000000000000009, 0.19999999999999996, 0.5,
             0.7999999999999998, -1.5, -1.2, -0.9, -0.6000000000000001, -0.30000000000000004, 0.0, 0.2999999999999998, -2.0,
             -1.7, -1.4, -1.1, -0.8, -0.5, -0.20000000000000018}
    };

    newFile << "output_2 = " << "\n";

    cout << "Example 2:\n";
    test(example_2[0],example_2[1],7,5,newFile);    


    // Example 3
    vector<vector<double>> example_3 = 
    {
        {0.0, 0.4202898776073016, 0.8405797552146032, 1.2608696328219047, 1.6811595104292063, 2.101449388036508,
              2.5217392656438093, -0.4202898776073016, 0.0, 0.4202898776073016, 0.840579755214603, 1.2608696328219047,
              1.6811595104292063, 2.101449388036508, -0.8405797552146032, -0.4202898776073016, 0.0, 0.4202898776073015,
              0.8405797552146032, 1.2608696328219047, 1.681159510429206, -1.2608696328219047, -0.840579755214603,
              -0.4202898776073015, 0.0, 0.42028987760730163, 0.8405797552146033, 1.2608696328219047,
              -1.6811595104292063, -1.2608696328219047, -0.8405797552146032, -0.42028987760730163, 0.0,
              0.42028987760730163, 0.840579755214603},
        {0.0, -0.4584980110325844, -0.9169960220651688, -1.3754940330977532, -1.8339920441303377,
           -2.292490055162922, -2.7509880661955064, -0.8596838219272446, -1.318181832959829, -1.7766798439924134,
           -2.2351778550249977, -2.6936758660575824, -3.1521738770901666, -3.610671888122751, -1.7193676438544891,
           -2.1778656548870736, -2.636363665919658, -3.0948616769522426, -3.553359687984827, -4.011857699017411,
           -4.470355710049995, -2.579051465781734, -3.037549476814318, -3.496047487846903, -3.954545498879487,
           -4.413043509912072, -4.871541520944656, -5.33003953197724, -3.4387352877089783, -3.8972332987415625,
           -4.355731309774147, -4.8142293208067315, -5.272727331839316, -5.7312253428719, -6.189723353904485}};

     newFile << "output_3 = " << "\n";

     cout << "Example 3:\n";
     test(example_3[0],example_3[1],7,5,newFile); 


    newFile.close();

    // system ("pause");

    return 0;
}   